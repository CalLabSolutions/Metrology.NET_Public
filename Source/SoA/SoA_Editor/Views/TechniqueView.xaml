<UserControl x:Class="SoA_Editor.Views.TechniqueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:vm="clr-namespace:SoA_Editor.ViewModels"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance vm:TechniqueViewModel}"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}" Padding="5">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type Border}" x:Key="HorizontalDividerBorder">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignDivider}"/>
                <Setter Property="UseLayoutRounding" Value="True"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="Height" Value="1"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10" />
            <RowDefinition Height="*" />
            <RowDefinition Height="10" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <!-- Technique Information -->
            <StackPanel Orientation="Horizontal">
                <materialDesign:Card
                Background="{DynamicResource PrimaryHueMidBrush}"
                HorizontalAlignment="Left" MinWidth="300"
                Padding="8" Margin="0,0,0,20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" FontWeight="Bold" Grid.Row="0" Grid.Column="0">Taxon:</Label>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" Grid.Row="0" Grid.Column="1" Content="taxonomy" x:Name="TaxonomyName" />
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" FontWeight="Bold" Grid.Row="1" Grid.Column="0">Technique:</Label>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" Grid.Row="1" Grid.Column="1" Content="technique" x:Name="TechniqueName" />
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" FontWeight="Bold" Grid.Row="2" Grid.Column="0">Uncertainty:</Label>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" Grid.Row="2" Grid.Column="1" Content="function" x:Name="FunctionName" />
                    </Grid>
                </materialDesign:Card>

                <materialDesign:Card
                Background="{DynamicResource PrimaryHueMidBrush}"
                HorizontalAlignment="Left" MinWidth="300"
                Padding="8" Margin="20,0,0,20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" FontWeight="Bold" Grid.Row="0" Grid.Column="0">Category:</Label>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" Grid.Row="0" Grid.Column="1" Content="category" x:Name="Category" />
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" FontWeight="Bold" Grid.Row="1" Grid.Column="0">Source Equipment:</Label>
                        <Label Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]" FontWeight="Bold" Grid.Row="1" Grid.Column="1">Measure Equipment:</Label>
                        <ItemsControl Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Margin="15 0 0 0" ItemsSource="{Binding SourceEquipment}" Grid.Row="2" Grid.Column="0" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]"/>
                        <ItemsControl Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}" Margin="20 0 0 0" ItemsSource="{Binding MeasureEquipment}" Grid.Row="2" Grid.Column="1" cal:Message.Attach="[Event MouseDown] = [Action EditTechnique()]"/>
                    </Grid>
                </materialDesign:Card>
            </StackPanel>            
            
            <materialDesign:Card>
                <StackPanel>
                    <!--Input Parameter Ranges -->
                    <Expander Header="Input Parameters" IsExpanded="False">
                        <StackPanel>
                            <DataGrid Name="InputParameters" ItemsSource="{Binding InputParameters}" AutoGenerateColumns="False" CanUserAddRows="False"
                                      CanUserDeleteRows="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,0,0,20">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=InputParam}" IsReadOnly="True" />
                                    <DataGridTextColumn IsReadOnly="True" Header="Quantity" Binding="{Binding Path=Quantity, UpdateSourceTrigger=PropertyChanged}" />
                                    <DataGridTextColumn IsReadOnly="True" Header="Required" Binding="{Binding Path=Optional}" />
                                    <DataGridCheckBoxColumn Header="Variable" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                            Binding="{Binding Variable, UpdateSourceTrigger=PropertyChanged}" x:Name="Variable">
                                        <DataGridCheckBoxColumn.HeaderStyle>
                                            <Style TargetType="{x:Type DataGridColumnHeader}"  BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                            </Style>
                                        </DataGridCheckBoxColumn.HeaderStyle>
                                    </DataGridCheckBoxColumn>
                                    <materialDesign:DataGridComboBoxColumn  Header="Variable Type" Width="Auto" IsEditable="False"
                                                            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.VariableTypes}"
                                                            SelectedValueBinding="{Binding VariableType, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                                    </materialDesign:DataGridComboBoxColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button cal:Message.Attach="EditInputParam($dataContext)">Edit</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Background="DarkRed" BorderBrush="Transparent" cal:Message.Attach="DeleteInputParam($dataContext)">Delete</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Button x:Name="AddInputParameter" Content="Add Input Parameter" Width="175" Margin="10 0 0 10" Style="{DynamicResource MaterialDesignOutlinedButton}" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Expander>

                    <Border Style="{StaticResource HorizontalDividerBorder}" />

                    <!-- Assertions -->
                    <Expander Header="Assertions/Grouping" IsExpanded="False">
                        <StackPanel>
                            <DataGrid Name="Assertions" ItemsSource="{Binding Assertions, Mode=TwoWay}" AutoGenerateColumns="False" CanUserAddRows="False"
                                      CanUserDeleteRows="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,0,0,20">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" />
                                    <DataGridTextColumn Header="Values" Binding="{Binding Values}" IsReadOnly="True" />
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button cal:Message.Attach="EditAssertion($dataContext)">Edit</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Background="DarkRed" BorderBrush="Transparent" cal:Message.Attach="DeleteAssertion($dataContext)">Delete</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                            <Button x:Name="AddAssertion" Content="Add Assertion" Margin="10 0 0 10" Style="{StaticResource MaterialDesignOutlinedButton}" Width="125" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Expander>

                    <Border Style="{StaticResource HorizontalDividerBorder}" />

                    <!--Input Parameter Ranges -->
                    <Expander Header="Input Parameter Ranges" IsExpanded="False">
                        <StackPanel>
                            <DataGrid x:Name="InputParameterRanges" ItemsSource="{Binding InputParameterRanges}" AutoGenerateColumns="False" CanUserAddRows="False"
                                      CanUserDeleteRows="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,20,0,20">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Input Parameter" IsReadOnly="True" Binding="{Binding Path=InputParamRange,UpdateSourceTrigger=PropertyChanged}" />
                                    <DataGridTemplateColumn Header="Minimum" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding TestMin}" />
                                                    <TextBlock Margin="5 0 0 0" Text="{Binding Min}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Maximum" IsReadOnly="True">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding TestMax}" />
                                                    <TextBlock Margin="5 0 0 0" Text="{Binding Max}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button cal:Message.Attach="EditInputParamRange($dataContext)">Edit</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Background="DarkRed" BorderBrush="Transparent" cal:Message.Attach="DeleteInputParamRange($dataContext)">Delete</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Button x:Name="AddInputParameterRange" Content="Add Input Parameter Range" Margin="10 0 0 10" Style="{StaticResource MaterialDesignOutlinedButton}" Width="215" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Expander>

                    <Border Style="{StaticResource HorizontalDividerBorder}" />

                    <!--Results -->
                    <Expander Header="Output Results" IsExpanded="False">
                        <StackPanel>
                            <DataGrid x:Name="Outputs" ItemsSource="{Binding Outputs}" AutoGenerateColumns="False" CanUserAddRows="False"
                                      CanUserDeleteRows="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,20,0,20">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Path=Output}" IsReadOnly="True"/>
                                    <DataGridTemplateColumn Header="Minimum">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding TestMin}" />
                                                    <TextBlock Margin="5 0 0 0" Text="{Binding Min}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Maximum">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding TestMax}" />
                                                    <TextBlock Margin="5 0 0 0" Text="{Binding Max}" />
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button cal:Message.Attach="EditOutput($dataContext)">Edit</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn>
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Background="DarkRed" BorderBrush="Transparent" cal:Message.Attach="DeleteOutput($dataContext)">Delete</Button>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>

                            <Button x:Name="AddOutput" Content="Add Output Results" Margin="10 0 0 10" Style="{StaticResource MaterialDesignOutlinedButton}" Width="155" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Expander>

                </StackPanel>
            </materialDesign:Card>

            <Separator Margin="0 25 0 0"/>

            <Grid Margin="0 10 0 0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="10" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="10" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="1" Grid.Column="1" Content="Formulas" />
                <Label Grid.Row="1" Grid.Column="2" Content="Variables - Select a value to add it to the Fomula" />

                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Formula, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                    TextWrapping="Wrap"
                    VerticalAlignment="Top"
                    AcceptsReturn="True"
                    VerticalScrollBarVisibility="Auto"
                    materialDesign:HintAssist.Hint="Select a value from the varuable list to add it to the Fomula"
                    materialDesign:HintAssist.HelperText="Please use a space between all variables and symbols"
                    Height="80" />

                <DataGrid Grid.Row="2" Grid.Column="2" x:Name="Variables" ItemsSource="{Binding Variables}" AutoGenerateColumns="False"
                     CanUserSortColumns="True" CanUserAddRows="False" IsReadOnly="True" SelectedItem="{Binding Variable}">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Parameter" Binding="{Binding Path=Value,UpdateSourceTrigger=PropertyChanged}" />
                        <DataGridTextColumn Header="Type" Binding="{Binding Path=Type,UpdateSourceTrigger=PropertyChanged}" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>