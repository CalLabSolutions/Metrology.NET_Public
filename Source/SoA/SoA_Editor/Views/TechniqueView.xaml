<UserControl x:Class="SoA_Editor.Views.TechniqueView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:local="clr-namespace:SoA_Editor.Views"
             xmlns:vm="clr-namespace:SoA_Editor.ViewModels"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance vm:TechniqueViewModel}"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             TextElement.Foreground="{DynamicResource MaterialDesignBody}"
             TextElement.FontWeight="Regular"
             TextElement.FontSize="13"
             TextOptions.TextFormattingMode="Ideal"
             TextOptions.TextRenderingMode="Auto"
             Background="{DynamicResource MaterialDesignPaper}"
             FontFamily="{DynamicResource MaterialDesignFont}" Padding="5">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.DialogHost.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="10" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="10" />
        </Grid.ColumnDefinitions>

        <StackPanel Orientation="Vertical" Grid.ColumnSpan="2" Grid.RowSpan="2">
            <StackPanel Orientation="Horizontal">
                <materialDesign:Card
                Background="{DynamicResource PrimaryHueLightBrush}"
                Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                HorizontalAlignment="Left" MinWidth="300"
                Padding="8" Margin="0,0,0,20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label FontWeight="Bold" Grid.Row="0" Grid.Column="0">Taxon:</Label>
                        <Label Grid.Row="0" Grid.Column="1" Content="taxonomy" x:Name="TaxonomyName"/>
                        <Label FontWeight="Bold" Grid.Row="1" Grid.Column="0">Technique:</Label>
                        <Label Grid.Row="1" Grid.Column="1" Content="technique" x:Name="TechniqueName"/>
                        <Label FontWeight="Bold" Grid.Row="2" Grid.Column="0">Uncertainty:</Label>
                        <Label Grid.Row="2" Grid.Column="1" Content="function" x:Name="FunctionName" />
                    </Grid>
                </materialDesign:Card>

                <materialDesign:Card
                Background="{DynamicResource PrimaryHueLightBrush}"
                Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                HorizontalAlignment="Left" MinWidth="300"
                Padding="8" Margin="20,0,0,20">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label FontWeight="Bold" Grid.Row="0" Grid.Column="0">Category:</Label>
                        <Label Grid.Row="0" Grid.Column="1" Content="category" x:Name="Category"/>
                        <Label FontWeight="Bold" Grid.Row="1" Grid.Column="0">Source Equipment:</Label>
                        <Label FontWeight="Bold" Grid.Row="1" Grid.Column="1">Measure Equipment:</Label>
                        <ItemsControl Margin="15 0 0 0" ItemsSource="{Binding SourceEquipment}" Grid.Row="2" Grid.Column="0"/>
                        <ItemsControl Margin="20 0 0 0" ItemsSource="{Binding MeasureEquipment}" Grid.Row="2" Grid.Column="1"/>
                    </Grid>
                </materialDesign:Card>
            </StackPanel>

            <DataGrid x:Name="InputParameters" ItemsSource="{Binding InputParameters}" AutoGenerateColumns="False" CanUserAddRows="False"
                      CanUserDeleteRows="True" IsReadOnly="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,0,0,20" SelectedItem="{Binding InputParameter}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Input Parameters" Binding="{Binding Path=InputParam}" />
                    <DataGridTextColumn Header="Quantity" Binding="{Binding Path=Quantity, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Optional" Binding="{Binding Path=Optional}" />
                    <DataGridCheckBoxColumn Header="Variable" ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                            Binding="{Binding Variable, UpdateSourceTrigger=PropertyChanged}">                        
                        <DataGridCheckBoxColumn.HeaderStyle>
                            <Style TargetType="{x:Type DataGridColumnHeader}"  BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                            </Style>
                        </DataGridCheckBoxColumn.HeaderStyle>
                    </DataGridCheckBoxColumn>
                    <materialDesign:DataGridComboBoxColumn  Header="Variable Type" Width="Auto" IsEditable="False" 
                                                            ItemsSourceBinding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGrid}}, Path=DataContext.VariableTypes}"
                                                            SelectedValueBinding="{Binding VariableType, UpdateSourceTrigger=PropertyChanged}">
                    </materialDesign:DataGridComboBoxColumn>
                </DataGrid.Columns>
            </DataGrid>

            <Button x:Name="OpenInputParameterDialog" Content="Add Input Parameter" Width="175" Style="{DynamicResource MaterialDesignOutlinedButton}" HorizontalAlignment="Left"/>

            <DataGrid x:Name="InputParameterRanges" ItemsSource="{Binding InputParameterRanges}" AutoGenerateColumns="False" CanUserAddRows="False"
                      CanUserDeleteRows="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,20,0,20">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Input Parameter Ranges" Binding="{Binding Path=InputParamRange,UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Min" Binding="{Binding Path=Min, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Max" Binding="{Binding Path=Max,UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
            </DataGrid>

            <DataGrid x:Name="Outputs" ItemsSource="{Binding Outputs}" AutoGenerateColumns="False" CanUserAddRows="False"
                      CanUserDeleteRows="True" CanUserReorderColumns="True" CanUserSortColumns="True" Margin="0,0,0,20">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Outputs" Binding="{Binding Path=Output,UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Min" Binding="{Binding Path=Min, UpdateSourceTrigger=PropertyChanged}"/>
                    <DataGridTextColumn Header="Max" Binding="{Binding Path=Max, UpdateSourceTrigger=PropertyChanged}"/>
                </DataGrid.Columns>
            </DataGrid>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="10"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="10" />
                </Grid.ColumnDefinitions>

                <Label Grid.Row="1" Grid.Column="1" Content="Formulas"/>
                <Label Grid.Row="1" Grid.Column="2" Content="Variables"/>

                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Formula, Mode=TwoWay}"
                    TextWrapping="Wrap"
                    VerticalAlignment="Top"                    
                    AcceptsReturn="True"
                    VerticalScrollBarVisibility="Auto"
                    materialDesign:HintAssist.Hint="Multiline text"
                    Height="80"/>     

                <DataGrid Grid.Row="2" Grid.Column="2" x:Name="Variables" ItemsSource="{Binding Variables}" AutoGenerateColumns="False"
                     CanUserReorderColumns="True" CanUserSortColumns="True" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Parameter" Binding="{Binding Path=Value,UpdateSourceTrigger=PropertyChanged}"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding Path=Type,UpdateSourceTrigger=PropertyChanged}"/>
                    </DataGrid.Columns>
                </DataGrid>

            </Grid>
        </StackPanel>
        <materialDesign:DialogHost Identifier="TechniqueDialog" DialogTheme="Inherit" CloseOnClickAway="True" />
    </Grid>
</UserControl>

    